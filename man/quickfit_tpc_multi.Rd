% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickfit_tpc_multi.R
\name{quickfit_tpc_multi}
\alias{quickfit_tpc_multi}
\title{Perform a parallelised quick tpc fit across models and curves}
\usage{
quickfit_tpc_multi(
  d,
  model_names,
  temp,
  trait,
  start_adjusts = 0,
  iter = 150,
  lhstype = "none",
  gridstart = FALSE,
  force = FALSE
)
}
\arguments{
\item{d}{the data to fit a model to}

\item{model_names}{a vector of model names to fit as strings}

\item{temp}{the column name (as a string) containing the temperature data}

\item{trait}{the column name (as a string) containing the temperature data}

\item{start_adjusts}{any adjustments to make to the lower and upper starting bounds. If \code{0 < start_adjusts < 1}, this will be interpreted as a proportion of the base starting values.}

\item{iter}{number of combinations of starting parameters which will be tried (as in \code{\link[nls.multstart]{nls_multstart}})}

\item{lhstype}{method to use for Latin Hypercube Sampling using \code{\link[lhs]{lhs}} (as in \code{\link[nls.multstart]{nls_multstart}})}

\item{gridstart}{whether to run a gridstart approach (interpreting iter as the number of samples to take across each parameter, 
so \code{3} will become \code{c(3,3,3)} for a 3-parameter model)}

\item{force}{whether to force a gridstart even with very large numbers of iterations}
}
\value{
A tibble of model fits
}
\description{
Performs a parallelised TPC fit using \code{\link[nls.multstart]{nls_multstart}} and \code{\link[purrr]{map}}. This function tries to use a sensible default configuration, 
however if you need to use the more esoteric elements of \code{\link[nls.multstart]{nls_multstart}} then you may need to construct your own running script.
}
\note{
The parameters \code{temp}, \code{trait}, \code{start_adjusts}, \code{iter}, \code{lhstype}, \code{gridstart}, or \code{force} can be specified per-model
 by providing a vector of values of a length equal to the number of models to be fit.
}
\examples{
\dontrun{
data("chlorella_tpc")
d2 <- subset(chlorella_tpc, curve_id <= 60)

# Set up daemons for parallelism
mirai::daemons(2)

quickfit_tpc_multi(d2, c("briere1_1999", "briere2_1999"), "temp", "rate")

quickfit_tpc_multi(d2, c("briere1_1999", "briere2_1999"), "temp", "rate", start_adjusts = 10)

quickfit_tpc_multi(d2, c("briere1_1999", "briere2_1999"), "temp", "rate", iter = c(100, 150))

mirai::daemons(0)
}
}
\author{
Francis Windram
}
\concept{helper}
